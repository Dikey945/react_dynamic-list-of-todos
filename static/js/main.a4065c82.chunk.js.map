{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","isTodoSelected","classNames","type","onClick","TodoFilter","filterSelection","setFilterSelection","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onModalClose","useState","user","setUser","isUserLoaded","setIsUserLoaded","userId","useEffect","getUser","userFromServer","href","email","name","App","setTodos","isTodosLoaded","setIsTodosLoaded","getTodosFormServer","a","todosFromServer","filter","loweredTitle","toLowerCase","loweredQuery","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4065c82.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const handleButtonClick = (currentTodo: Todo) => (\n    setSelectedTodo(currentTodo)\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th />\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n          const isTodoSelected = id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleButtonClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye-slash': isTodoSelected,\n                      'fa-eye': !isTodoSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  filterSelection: string;\n  setFilterSelection: (selection: string) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterSelection,\n  setFilterSelection,\n  query,\n  setQuery,\n}) => {\n  const handleFilterSelection\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setFilterSelection(event.target.value);\n    };\n\n  const handleQueryInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleClearQuery = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterSelection}\n            onChange={handleFilterSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo\n  onModalClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onModalClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoaded, setIsUserLoaded] = useState(false);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setIsUserLoaded(true);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames(completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterSelection, setFilterSelection] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n\n  useEffect(() => {\n    const getTodosFormServer = async () => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsTodosLoaded(true);\n    };\n\n    getTodosFormServer();\n  }, []);\n\n  const onModalClose = () => setSelectedTodo(null);\n\n  const filterTodos = () => {\n    const queriedTodos = todos.filter(({ title }) => {\n      const loweredTitle = title.toLowerCase();\n      const loweredQuery = query.toLowerCase();\n\n      return loweredTitle.includes(loweredQuery);\n    });\n\n    return queriedTodos.filter(todo => {\n      switch (filterSelection) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterSelection={filterSelection}\n                setFilterSelection={setFilterSelection}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodosLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onModalClose={onModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}